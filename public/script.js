let socket;
let username = "";

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
function setUsername() {
    username = document.getElementById("username").value.trim();
    if (!username) {
        alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è!");
        return;
    }

    // –°—Ö–æ–≤—É—î–º–æ —Ñ–æ—Ä–º—É –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ —ñ –ø–æ–∫–∞–∑—É—î–º–æ —á–∞—Ç-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    document.getElementById("username-section").style.display = "none";
    document.getElementById("chat-section").style.display = "block";
}

async function createRoom() {
    const response = await fetch("/create-room");
    const data = await response.json();
    document.getElementById("roomUrl").value = data.roomUrl;
    joinRoom();
}

function joinRoom() {
    const url = document.getElementById("roomUrl").value;
    if (!url) return alert("–í–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫—ñ–º–Ω–∞—Ç—É!");

    socket = new WebSocket(url);

    socket.onopen = () => {
        document.getElementById("room-info").innerText = "üîµ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ " + url;
    };

    socket.onmessage = async (event) => {
        const chatBox = document.getElementById("chat-box");
        const data = await event.data.text(); // –ß–∏—Ç–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —è–∫ —Ç–µ–∫—Å—Ç

        try {
            const messageObj = JSON.parse(data);
            chatBox.innerHTML += `<p><strong>${messageObj.sender}:</strong> ${messageObj.text}</p>`;
        } catch (e) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", e);
        }

        chatBox.scrollTop = chatBox.scrollHeight;
    };

    socket.onclose = () => {
        document.getElementById("room-info").innerText = "üî¥ –ó'—î–¥–Ω–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–µ";
        reconnect(); // –ê–≤—Ç–æ–ø–µ—Ä–µ–ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    };

    socket.onerror = (error) => {
        console.error("WebSocket Error:", error);
        alert("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —á–∞—Ç—É");
    };
}

function sendMessage() {
    const message = document.getElementById("message").value;
    if (socket && socket.readyState === WebSocket.OPEN) {
        const messageObj = { sender: username, text: message };
        socket.send(JSON.stringify(messageObj)); // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ JSON
        document.getElementById("message").value = "";
    } else {
        alert("‚ùå WebSocket —â–µ –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π!");
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –ø–µ—Ä–µ–ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É —Ä–∞–∑—ñ –≤—Ç—Ä–∞—Ç–∏ –∑–≤'—è–∑–∫—É
function reconnect() {
    setTimeout(() => {
        console.log("üîÑ –ü–µ—Ä–µ–ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è...");
        joinRoom();
    }, 3000);
}
